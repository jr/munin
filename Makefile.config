# This file specifies where LRRD will look for things after you've
# run 'make' in the source directory.  Modify it to suit your needs.

# DESTDIR is empty during building, and optionally set to point to
# a shadow tree during make install.

#
# the base of the LRRD installation.
# 
PREFIX     = $(DESTDIR)/opt/lrrd

# Where LRRD keeps its configurations (server.conf, client.conf, ++)
CONFDIR    = $(DESTDIR)/etc/opt/lrrd

# Server only - where to put lrrd-cron
BINDIR     = $(PREFIX)/bin

# Client only - where to put lrrd-client, lrrd-client-configure, and lrrd-run
SBINDIR    = $(PREFIX)/sbin

# Where to put text and html documentation
DOCDIR     = $(PREFIX)/doc

# Where to put man pages
MANDIR     = $(PREFIX)/man

# Where to put internal binaries and plugin repository
LIBDIR     = $(PREFIX)/lib

# Server only - Output directory
HTMLDIR    = $(PREFIX)/var/www

# Client only - Where to put RRD files and other intenal data
DBDIR      = $(DESTDIR)/var/opt/lrrd

# Client only - Where plugins should put their states. Must be writable by
# group "lrrd", and should be preserved between reboots
PLUGSTATE  = $(DBDIR)/plugin-state

# Where LRRD should place its logs.
LOGDIR     = $(DESTDIR)/var/log/lrrd

# Location of PID files and other statefiles. On the server, must be
# writable by the user "lrrd".
STATEDIR   = $(DESTDIR)/var/run/lrrd

# The perl interpreter to use
PERL       = $(shell which perl)

# Server only - Where to install the perl libraries
PERLLIB    = $(DESTDIR)$(shell $(PERL) -V:sitelib | cut -d= -f2 | sed "s/[\';]//g")

# Client only - Install plugins for this architecture
ARCH       = $(shell uname | tr 'A-Z' 'a-z')

# How to figure out the hostname. (Only used in default configuration
# files)
HOSTNAME   = $(shell hostname)

# LRRD version number.
VERSION    = $(shell cat RELEASE)

# User to run lrrd-server as
USER       = lrrd
GROUP      = lrrd
CHECKUSER  = $(shell getent passwd $(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistant. Create the user and retry; exit 2"))
CHECKGROUP = $(shell getent group $(GROUP) >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistant. Create the group and retry; exit 2"))

CHOWN      = chown
CHMOD      = chmod
CHGRP      = chgrp
