#!@@PERL@@ -w
#
# $Log$
# Revision 1.1  2004/01/02 15:18:07  jimmyo
# Initial revision
#
# Revision 1.2  2003/11/07 17:43:16  jimmyo
# Cleanups and log entries
#
#
#
# Plugin for watching io-bound traffic (in KiloBytes) on disks.
#
#   DESCRIPTION
#   ===========
#     Similar to the iostat script, but will only report usage on hdisks physically installed in the
#     server.
#    
#   RESTRICTIONS
#   ============
#     Same as the iostat script, see it's RESTRICTIONS.
#
# Note:  If you have virtual paths, typical when gigabit fiber cards
#        are installed and attached to an ESS (Shark) or some sort of
#        large disk array, this will not include any information for
#        them.  This only collects information for hdisks physically
#        located in the machine, no virtual drives are included.
#
# Usage: Link or copy into /etc/lrrd/client.d/
#
# Parameters:
#
# 	config   (required)
# 	autoconf (optional - used by lrrd-config)
#
# Magic markers (optional - used by lrrd-config and some installation
# scripts):
#
#%# family=contrib
#%# capabilities=autoconf

use strict;
use POSIX;

my($arg) = shift;

if($arg && $arg eq "autoconf")
  {
    if((-e "/usr/bin/iostat" && -X "/usr/bin/iostat") && (-e '/usr/sbin/lspv' && -X '/usr/sbin/lspv'))
      {
        print "yes\n";
        exit 0;
      }
    else
      {
        print "no\n";
        exit 1;
      }
  }
 
if($arg && $arg eq "config")
  {
    print "graph_title IOstat (Internal Disks Only)\n";
    print "graph_args --base 1024 -l 0\n";
    print "graph_vlabel KB / second\n";
    my(@info) = getDiskIO("disk only");
    my($line);
    foreach $line (@info)
      {
        print "$line.label $line\n";
        print "$line.type COUNTER\n";
        print "$line.max 100000\n";
      }
    exit 0;
  }
  
my(@info) = getDiskIO('');
my($line);
foreach $line (@info)
  {print "$line";}
  
    
sub getDiskIO
{
  my($diskOnly) = @_;
  my($line,@lineArray,@diskArray,$writes,$reads,$diskLine);
  if($diskOnly && $diskOnly eq 'disk only')
    {
      open DISKLIST, "/usr/sbin/lspv|grep hdisk|grep -v none|";
      while($line = <DISKLIST>)
        {
          @lineArray = split(/ +/,$line);
          push(@diskArray,"$lineArray[0]_read","$lineArray[0]_write");
        }
    }
  else
    {
      open DISKLIST, "/usr/sbin/lspv|grep hdisk|grep -v none|";
      while($line = <DISKLIST>)
        {
          @lineArray = split(/ +/,$line);
          $diskLine = `/usr/bin/iostat|grep $lineArray[0]`;
          @lineArray = split(/ +/,$diskLine);
          $writes = $lineArray[5];
          chomp($writes);
          $reads = $lineArray[4];
          chomp($reads);
          
          push(@diskArray,"$lineArray[0]_read.value $reads\n","$lineArray[0]_write.value $writes\n");
        }
    }
  return @diskArray
}

