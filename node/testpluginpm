#!/usr/bin/perl -w

use strict;

sub scaleNumber {
    my $number = shift;
    my $unit = shift;
    my $zero = shift;
    my $format = shift || '%.1f%s%s';

    my %large = (1E+24, 'Y',  # yotta
		 1E+21, 'Z',  # zetta
		 1E+18, 'E',  # exa
		 1E+15, 'P',  # peta
		 1E+12, 'T',  # tera
		 1E+9,  'G',  # giga
		 1E+6,  'M',  # mega
		 1E+3,  'k',  # kilo
		 1,     '');  # nothing

    my %small = (1,     '',   # nothing
		 1E-3,  'm',  # milli
		 1E-6,  'u',  # micro
		 1E-9,  'n',  # nano
		 1E-12, 'p',  # pico
		 1E-15, 'f',  # femto
		 1E-18, 'a',  # atto
		 1E-21, 'z',  # zepto
		 1E-24, 'y'); # yocto

    # Get the absolute and exagerate it slightly since floating point
    # numbers don't compare very well.

    my $absnum = abs($number) * 1.0000001;

    if ($absnum < 1E-26) {
	# So small it might as well be naught.  If compared against
	# 1E-27 we'll get "Illegal division by zero", so we're damn
	# close to nothing.
	if (defined($zero)) {
	    return $zero;
	} else {
	    return sprintf $format, $number, '', $unit;
	}
    } elsif ($absnum > 1) {
	my $mag = my $magnitude=0;
	foreach $magnitude (sort { $a <=> $b } keys %large) {
	    last if $magnitude >= $absnum;
	    $mag = $magnitude;
	}
	return sprintf $format, $number/$mag, $large{$mag}, $unit;
    } else {
	# Less than 1 and more than naught
	my $mag = my $magnitude=0;
	foreach $magnitude (sort { $a <=> $b } keys %small) {
	    last if $magnitude >= $absnum;
	    $mag = $magnitude;
	}
	return sprintf $format, $number/$mag, $small{$mag}, $unit;
    }
}

# ${}

print scaleNumber(1000000000000000000000000000000000,"bps","no "),"\n";
print scaleNumber(1000000000000000000000000000000,"bps","no "),"\n";
print scaleNumber(1000000000000000000000000000,"bps","no "),"\n";
print scaleNumber(1000000000000000000000000,"bps","no "),"\n";
print scaleNumber(1000000000000000000000,"bps","no "),"\n";
print scaleNumber(1000000000000000000,"bps","no "),"\n";
print scaleNumber(1000000000000000,"bps","no "),"\n";
print scaleNumber(1000000000000,"bps","no "),"\n";
print scaleNumber(1000000000,"bps","no "),"\n";
print scaleNumber(1000000,"bps","no "),"\n";
print scaleNumber(1000,"bps","no "),"\n";
print scaleNumber(1,"bps","no "),"\n";
print scaleNumber(0.9999,"bps","no "),"\n";
print scaleNumber(0.1,"bps","no "),"\n";
print scaleNumber(0.001,"bps","no "),"\n";
print scaleNumber(0.000001,"bps","no "),"\n";
print scaleNumber(0.000000001,"bps","no "),"\n";
print scaleNumber(0.000000000001,"bps","no "),"\n";
print scaleNumber(0.000000000000001,"bps","no "),"\n";
print scaleNumber(0.000000000000000001,"bps","no "),"\n";
print scaleNumber(0.000000000000000000001,"bps","no "),"\n";
print scaleNumber(0.000000000000000000000001,"bps","no "),"\n";
print scaleNumber(0.000000000000000000000000001,"bps","no "),"\n";
print scaleNumber(0.000000000000000000000000000001,"bps","no "),"\n";
print scaleNumber(0.000000000000000000000000000000001,"bps","no "),"\n";
print scaleNumber(0.000000000000000000000000000000000001,"bps","no "),"\n";

__END__
