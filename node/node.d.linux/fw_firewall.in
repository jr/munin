#!@@PERL@@ -w
#
# Plugin to monitor the throuhgput of a firewall.
#
# Usage: copy or link into /etc/munin/node.d/
#
# Parameters:
#
#       config   (required)
#       autoconf (optional - used by munin-config)
#
# Config variables:
#
# $Log$
# Revision 1.1  2004/05/06 22:03:26  jimmyo
# Two new linux firewall plugins; fw_firewall (by S. Banerian) and fw_conntrack (by Nicolai Langfeldt).
#
#
# Revision 1.0  20043/04/26 17:43:16 stefani
#
# Magic markers (optional - used by munin-config and some installation
# scripts):
#
#%# family=contrib
#%# capabilities=autoconf

my $statefile = "@@STATEDIR@@/munin-plugin-fw.state";

if (-f "$statefile")
{
    open (IN, "$statefile") or exit 4;
    if (<IN> =~ /^(\d+):(\d+):(\d+)/)
    {
        ($states, $forwarded_old, $received_old) = ($1, $2, $3);
    }
    close IN;
}

if (! -f $statefile )
{
    print "states.value U\n";
    print "forwarded.value U\n";
    print "rejected.value U\n";
    exit 0;
}

if (!defined $states)
{
    # Initial run.
    $states = 0;
    $forwarded_old = 0;
    $received_old = 0;
}

if ( $ARGV[0] and $ARGV[0] eq "config" )
{
    print "graph_title Firewall Throughput\n";
    print "graph_args --base 1000 -l 0\n";
    print "graph_vlabel states packets/sec \n";
    print "states.label states\n";
    print "states.draw LINE2\n";
    print "forwarded.label pct fwd\n";
    print "forwarded.draw LINE2\n";
    print "rejected.label pct rej\n";
    print "rejected.draw LINE2\n";
    exit 0;
}

open(F, "/proc/net/ip_conntrack");
while (<F>) {};
$states = $.;
close(F);

$forwarded_new = 0;
$received_new = 0;
#$interval = 60;
$interval = 300;

open(F, "/proc/net/snmp");
while (<F>) {
	if (/^Ip: \d/) {
		@ip = split;
		$forwarded_new = $ip[6];  #forwarded
		$received_new = $ip[3];  #received
		last;
	}
}
close(F);

$forwarded = abs($forwarded_new - $forwarded_old);
$received  = abs($received_new - $received_old);
$rejected  = ($received - $forwarded)/$interval;
$forwarded = $forwarded/$interval;

if(-l $statefile) {
        die("$statefile is a symbolic link, refusing to touch it.");
}
open (OUT, ">$statefile") or exit 4;
print OUT "$states:$forwarded_new:$received_new\n";
close OUT;

print "states.value $states\n";
printf("forwarded.value %.1f\n", $forwarded);
printf("rejected.value %.1f\n", $rejected);


# vim:syntax=perl
