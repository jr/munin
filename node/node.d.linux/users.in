#!@@PERL@@
# -*- perl -*-
#
# (C) 2004 Michael Kaiser tools (at) micha (dot) de
#   Modified and made more generic by Nicolai Langfeldt, 2006
# 
# Plugin to monitor the number users logged in to a unix box.
# Based on an idea of a hotsanic script.
# Never tested for any other class than pts users. Until now,
# I've only tested on various Linux boxen, but it might work
# on other Un*x-alike systems as well. I'd like to hear from 
# you, if you can report this script running on any other 
# platform than Linux.
#
# Parameters:
#
# 	config
#       autoconf
#
# $Id$
#
#%# family=auto
#%# capabilities=autoconf

if ( defined($ARGV[0])) {
    if ($ARGV[0] eq 'autoconf') {
	print "yes\n";
	exit 0;
    }

    if ( $ARGV[0] eq "config" ) {
	print "graph_title Logged in users\n";
	print "graph_args --base 1000 -l 0\n";
	print "graph_vlabel Count/min\n";
	print "graph_scale no\n";
	print "tty.label tty\n";
	print "tty.draw AREA\n";
	print "pty.label pty\n";
	print "pty.draw STACK\n";
	print "pts.label pts\n";
	print "pts.draw STACK\n";
	print "X.label X displays\n";
	print "X.draw STACK\n";
	exit 0;
    }
}

$tty = 0;
$pty = 0;
$pts = 0;
$X   = 0;

open (WHO,"who |");

foreach (<WHO>) {
    (undef,$_,undef) = split /[ \/]/;
    $tty++,next if /ttyv?/; # Linux virtual console tty (on some hosts)
    $pty++,next if /pty|ttyp/;
    $pts++,next if /pts/;
    $tty++,next if /tty/;   # Regular tty

    $X++,next if (/:\d+/); # Linux style X screen
    $X++,next if (/X[0-9a-fA-F]*/); # Solaris style (ifi.uio.no only?)
}

close (WHO);

print "tty.value $tty\n";
print "pty.value $pty\n";
print "pts.value $pts\n";
print "X.value $Xn";

# vim:syntax=perl
