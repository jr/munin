#!/usr/bin/perl
#
# Plugin to monitor inode-usage. Rewrite based on original shell-based version
# 
# Parameters understood:
#
#       config   (required)
#       autoconf (optional - used by munin-config)
#
# $Log$
#
# Magic markers (optional - used by munin-config and installation
# scripts):
#
#%# family=auto
#%# capabilities=autoconf

use strict;

my $MAXLABEL=25;

# Read /proc/mounts
my %mounts;
open (MOUNTS,"/proc/mounts") or die "Could not /proc/mounts for reading.";
while (<MOUNTS>) {
    # Does perl really not have any shorthand for this? I guess it has.
    if ( /^(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)/ ) {
	$mounts{$2}=$3;
    }
}
close MOUNTS;

sub print_values() {
    
    # Read from df
    open (DF,"/bin/df -P -l -i |") or die "Could not open pipe from /bin/df, $!";
    <DF>; # Skip the header
    while (<DF>) {
	next if /\/\//;
	
	# Parse the output
	if ( /^(\S+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\S+)\s+(\S+)/ ) {
	    my $fs=$mounts{$6};
	    my $ps=$5;
	    my $name=$1;
	    next if $fs eq "reiserfs";
	    
	    $ps =~ s/\%//;
	    $name =~ s/\//_/g;
	    print $name .  ".value  " . $ps . "\n";
	}
    }
    close DF;
}
    
if ( $ARGV[0] eq "autoconf" ) {
  if (`perl $0` eq "" ) {
    print "no\n";
    exit 1;
  }
  elsif ( `uname -s` eq "SunOS\n" ) {
    print "no\n";
    exit 1;
  }
  else {
    print "yes\n";
    exit 0;
  }
}

if ( $ARGV[0] eq "config" ) {

    # The headers
    print "graph_title Inode usage (in %)\n";
    print "graph_args --upper-limit 100 -l 0\n";
    print "graph_vlabel %\n";
    
    # Read from df
    open (DF,"/bin/df -P -l -i  |") or die "Unable to open pipe from /bin/df";
    <DF>; # Skip the header
    while (<DF>) {
	next if /\/\//;
	
	# Parse the output
	if ( /^(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)/ ) {
	    my $fs=$mounts{$6};
	    my $dir=$6;
	    my $name=$1; 
	    
	    # Create and print labels
	    $name =~ s/\//_/g;
	    next if $fs eq "reiserfs";
	    print $name .  ".label ";
	    if ( length($dir) <= $MAXLABEL ) {
		print $dir . "\n";
	    }
	    else {
		printf ("...%s\n", substr ($dir, length($dir)-$MAXLABEL+4,$MAXLABEL-3));
	    }
	    
	    print "$name.warning 92\n";
	    print "$name.critical 98\n";
	}
    }
    close DF;
    exit 0;
}

print_values();
