#!/usr/bin/perl -w
#
# $Log$
# Revision 1.2  2004/09/03 22:56:51  jimmyo
# Added support for SNMP probing.
#
# Revision 1.1  2004/05/01 10:50:53  jimmyo
# New SNMP plugins users and load.
#
# Revision 1.1  2004/04/30 20:13:53  jimmyo
# New SNMP plugin for number of procs.
#
# Revision 1.1  2004/04/29 22:29:57  jimmyo
# New SNMP plugin for disk usage.
#
# Revision 1.3  2004/02/22 20:17:58  jimmyo
# Typo fix
#
# Revision 1.2  2004/02/18 21:54:56  jimmyo
# Did a bit of work on the snmp-thingie.
#
# Revision 1.1  2004/01/02 18:50:00  jimmyo
# Renamed occurrances of lrrd -> munin
#
# Revision 1.1.1.1  2004/01/02 15:18:07  jimmyo
# Import of LRRD CVS tree after renaming to Munin
#
# Revision 1.1  2003/12/19 20:53:45  jimmyo
# Created by jo
#
#

use strict;
use Net::SNMP;

my $DEBUG = 0;
my $MAXLABEL = 20;

my $host      = $ENV{host}      || undef;
my $port      = $ENV{port}      || 161;
my $community = $ENV{community} || "public";
my $iface     = $ENV{interface} || undef;

my $response;

if (defined $ARGV[0] and $ARGV[0] eq "snmpconf")
{
	print "require 1.3.6.1.4.1.2021.10.1.3.2 [0-9]\n"; # Number
	exit 0;
}

if ($0 =~ /^(?:|.*\/)snmp_([^_]+)_load$/)
{
	$host  = $1;
	if ($host =~ /^([^:]+):(\d+)$/)
	{
		$host = $1;
		$port = $2;
	}
}
else
{
	print "# Debug: $0 -- $1\n" if $DEBUG;
	die "# Error: couldn't understand what I'm supposed to monitor.";
}

my ($session, $error) = Net::SNMP->session(
		-hostname  => $host,
		-community => $community,
		-port      => $port
	);

if (!defined ($session))
{
	die "Croaking: $error";
}

if (defined $ARGV[0] and $ARGV[0] eq "config")
{
	print "host_name $host\n";
	print "graph_title Load average
graph_args --base 1000 -l 0 
graph_vlabel load
load.label load
load.draw LINE2
";

	exit 0;
}

print "load.value ", &get_single ($session, "1.3.6.1.4.1.2021.10.1.3.2"), "\n";

sub get_single
{
	my $handle = shift;
	my $oid    = shift;

	print "# Getting single $oid...\n" if $DEBUG;

	$response = $handle->get_request ($oid);

	if (!defined $response->{$oid})
	{
	    return undef;
	}
	else
	{
	    return $response->{$oid};
	}
}

