#!@@GOODSH@@
# -*- sh -*-
#
# Copyright (C) 2004 Jimmy Olsen
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#
# Plugin to monitor ping times
#
# Environment
#
# 	ping_args      - Arguments to ping (default "-c 2")
# 	ping_args2     - Arguments after the host name (required for Solaris)
# 	ping           - Ping program to use
# 	host           - Host to ping. By default taken from command name.
#	ping_warn      - Warning limit for nagios notification
#	ping_crit      - Critical limit for nagios notification
#	packetloss_warn- Warning limit for nagios notification
#	packetloss_crit- Critical limit for nagios notification
#
# Arguments for Solaris:
#      ping_args      -s
#      ping_args2     56 2
#
#%# family=manual

. $MUNIN_LIBDIR/plugins/plugin.sh

case $0 in
    *ping6_*) 
	PING=ping6
	file_host=${0##*/ping6_}
	V=IPv6
	;;
    *ping_*)
	PING=ping
	file_host=${0##*/ping_}
	V=IPv4
	;;
esac

host=${host:-${file_host:-www.google.com}}

if [ "$1" = "config" ]; then
	echo graph_title $V ping times to $host
	echo 'graph_args --base 1000 -l 0'
	echo 'graph_vlabel seconds'
	echo 'graph_category network'
	echo 'graph_info This graph shows ping RTT statistics.'
	echo "ping.label $host"
	echo "ping.info Ping RTT statistics for $host."
	echo 'ping.draw LINE2'
	echo 'packetloss.label packet loss'
	echo 'packetloss.graph no'
	print_warning ping
	print_warning packetloss
	print_critical ping
	print_critical packetloss
	exit 0
fi


${ping:-ping} ${ping_args:-'-c 2'} ${host} ${ping_args2} | perl -n -e 'print "ping.value ", $1 / 1000, "\n" if m@min/avg/max.*\s\d+(?:\.\d+)?/(\d+(?:\.\d+)?)/\d+(?:\.\d+)?@; print "packetloss.value $1\n" if /(\d+)% packet loss/;'

