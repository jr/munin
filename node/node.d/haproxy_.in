#!@@PERL@@
#
# Graph stats from the haproxy daemon. Most of this plugin has been nicked
# from the apache_* plugins.
#
# Parameters supported:
#
# 	config
# 	autoconf
#
# Configurable variables
#
# 	url      - Override default status-url
#
# Magic markers:
#%# family=manual

my $ret = undef;
if (! eval "require LWP::UserAgent;")
{
	$ret = "LWP::UserAgent not found";
}

my $URL = exists $ENV{'url'} ? $ENV{'url'} : "http://localhost/haproxy-status;csv;norefresh";
my $url = $URL;

if ( defined $ARGV[0] and $ARGV[0] eq "autoconf" )
{
        if ($ret)
        {
                print "no ($ret)\n";
                exit 1;
        }
        my $ua = LWP::UserAgent->new(timeout => 30);
	my $response = $ua->request(HTTP::Request->new('GET',$url));

        if ($response->is_success)
        {
                print "yes\n";
                exit 0;
        }
        else
        {
                print "no (could not connect to haproxy status page)\n";
                exit 1;
        }
}

my $ua = LWP::UserAgent->new(timeout => 30);
my $response = $ua->request(HTTP::Request->new('GET',$url));
my $content = $response->content;

if ( exists $ARGV[0] and $ARGV[0] eq "config" )
{
	my $clusterid = "unknown cluster";
	if ($content =~ /\n([^,]+),FRONTEND/) {
		$clusterid = $1;
	}
	print "graph_title HAProxy statistics for $clusterid\n";
	print "graph_args --base 1000 -l 0\n";
	print "graph_vlabel connections per \${graph_period}\n";
	print "graph_category haproxy\n";
	my $fieldnum = 0;
	while ($content =~ /\n([^,]+),([^,]+),[^,]+,[^,]+,[^,]+,[^,]+,[^,]*,([^,]+),[^,]+,[^,]+,[^,]*,[^,]+,/g) {
		next if $2 eq "BACKEND";
		print "s$2.label ", $2, "\n";
		print "s$2.type DERIVE\n";
		print "s$2.min 0\n";
		if ($fieldnum++) {
			print "s$2.draw STACK\n";
		} else {
			print "s$2.draw AREA\n";
		}
	}
	exit 0;
}

while ($content =~ /\n([^,]+),([^,]+),[^,]+,[^,]+,[^,]+,[^,]+,[^,]*,([^,]+),[^,]+,[^,]+,[^,]*,[^,]+,/g) {
	print "s$2.value ", $3, "\n" unless $2 eq "BACKEND";
}

# vim:syntax=perl
