=head1 NAME

smart_ - Munin wildcard-plugin to monitor S.M.A.R.T. attribute values through smartctl

=head1 APPLICABLE SYSTEMS

Node with B<Python> interpreter and B<smartmontools> (http://smartmontools.sourceforge.net/) 
installed and in function.

=head1 CONFIGURATION

=head2 Create link in service directory

=over 2

To monitor a S.M.A.R.T device, create a link in the service directory
of the munin-node named smart_<device>, which is pointing to this file.
 
E.g.

ln -s /usr/share/munin/plugins/smart_ /etc/munin/plugins/smart_hda

...will monitor /dev/hda.

=back

=head2 Grant privileges in munin-node

=over 2

The plugin must be run under high privileged user B<root>, to get access to the raw device. 

=back

  So following minimal configuration in plugin-conf.d/munin-node is needed.

  [smart_*]
  user root
  group disk


=head2 Parameters

  smartpath   - Specify path to smartctl program (Default: /usr/sbin/smartctl)
  smartargs   - Override '-a' argument passed to smartctl with '-A -i'+smartargs

  Parameters can be specified on a per-drive basis, eg:

  [smart_hda]
  user root
  env.smartargs -H -c -l error -l selftest -l selective -d ata
  env.smartpath /usr/local/sbin/smartctl

  In particular, for SATA drives, with older versions of smartctl:

  [smart_sda]
  user root
  env.smartargs -d ata -a

  [smart_twa0-1]
  user root
  env.smartargs -H -l error -d 3ware,1

  [smart_twa0-2]
  user root
  env.smartargs -H -l error -d 3ware,2

=head1 INTERPRETATION

=over 2

If a device supports the B<Self-Monitoring, Analysis 
and Reporting Technology (S.M.A.R.T.)> it offers readable 
access to the attribute table. There you find the B<raw value>, 
a B<normalised value> and a B<threshold> (set by the vendor) 
for each attribute, that is supported by that device.

The meaning and handling of the raw value is a secret of the 
vendors embedded S.M.A.R.T.-Software on the disk. The only 
relevant info from our external view is the B<normalised value> 
in comparison with the B<threshold>. If the attribute value is 
greater than or equal to the threshhold, the attribute 
signals its failure and the B<health status> of the device 
will switch from B<passed> to B<failed>. 

This plugin fetches the B<normalised values of all SMART-Attributes> 
and draw a curve for each of them.
It takes the vendors threshold as critical limit for the munin datafield.
So you will see an alarm, if the value reaches the vendors threshold.

Looking at the graph: It is a bad sign, if the curve starts
to curl or to meander. The more horizontal it runs,
the better. Of course it is normal, that the temperatures 
curve swings a bit. But the others should stay steady on
their level if everything is ok.

S.M.A.R.T. distinguishes between B<Pre-fail> and B<Old-age> 
Attributes. An old disk will have more curling curves 
because of degradation, especially for the B<Old-age> Attributes. 
You should then backup more often, run more selftests[1] and prepare 
the disks replacement. 

B<Act directly>, if a <Pre-Fail> Attribute goes above threshold.  
Immediately back-up your data and replace your hard disk drive. 
A failure may be imminent..

[1] Consult the smartmontools manpages to learn about
offline tests and automated selftests with smartd. 
Only with both activated, the values of the SMART-Attributes 
reflect the all over state of the device.

Read my article here: 
http://www.linux-magazine.com/issue/49/Monitoring_Hard_Disks_with_smartmontools.pdf 

=back

=head1 MAGIC MARKERS

  #%# family=auto
  #%# capabilities=autoconf suggest

=head1 CALL OPTIONS

B<none>

  Fetches values if called without arguments: 

  E.g.: munin-run smart_hda

B<config>

  Prints plugins configuration. 

  E.g.: munin-run smart_hda config

B<autoconf> 

=over 2

Tries to find smartctl and outputs value 'yes' for success, 'no' if not.

It's used by B<munin-node-configure> to see wether autoconfiguration is possible. 

=back

B<suggest>

=over 2

Outputs the list of device names, that it found plugged to the system.

B<munin-node-configure> use this to build the service links for this wildcard-plugin.

=back

=head1 VERSION

Version 1.11 

=head1 BUGS

None known

=head1 AUTHOR

(C) 2004-2008 Nicolas Stransky <Nico@stransky.cx>

(C) 2008 Gabriele Pohl <contact@dipohl.de> 
Reformated existent documentation to POD-Style, added section Interpretation.

=head1 LICENSE

GPLv2 (http://www.gnu.org/licenses/gpl-2.0.txt)

=cut

