#!@@PERL@@ -w
#
# Plugin to monitor NTP statistics
#
# Parameters understood:
#
# 	config   (required)
# 	autoconf (optional - used by lrrd-config)
#       suggest  (optional - used by lrrd-config)
#
# $Log$
# Revision 1.1  2004/11/21 19:35:23  jimmyo
# Corrected file name.
#
# Revision 1.2  2004/09/08 15:25:33  ilmari
# Use @@PERL@@ in all perl shebang lines.
#
# Revision 1.1  2004/01/30 15:07:38  jimmyo
# Added generic plugins ntp_ and ntp_states to manual family (SF#887000).
#
#
#
#
# Magic markers - optional - used by installation scripts and
# lrrd-config:
#
#%# family=manual
#%# capabilities=autoconf suggest
#

use strict;
use Net::hostent;
use Socket;

if ($ARGV[0] and $ARGV[0] eq "autoconf") {
	`ntpq -c help >/dev/null 2>/dev/null`;
	if ($? eq "0") {
		print "yes\n";
		exit 0;
	} else {
		print "no (ntpq not found)\n";
		exit 1;
	}
}

if ($ARGV[0] and $ARGV[0] eq "suggest") {
	my @lines = `ntpq -c "hostnames no" -c peers`;
	foreach (@lines) {
		next unless /^.(\d+\.\d+\.\d+\.\d+)/;
		next if /^.224\.0\.1\.1/;
		my $addr = $1;
		my $name = gethostbyaddr(inet_aton($addr));
		$name = defined $name ? $name->name : $addr;
		$name =~ s/[\.-]/_/g;
		print $name, "\n";
	}
	exit 0;
}

$0 =~ /ntp_(.+)*$/; 
my $name = $1;
exit 2 unless defined $name;

if ($ARGV[0] and $ARGV[0] eq "config") {
	my @lines = `ntpq -c "hostnames no" -c peers`;
	my $host;
	foreach (@lines) {
		next unless /^.(\d+\.\d+\.\d+\.\d+)/;
		next if /^.224\.0\.1\.1/;
		my $addr = $1;
		my $host = gethostbyaddr(inet_aton($addr));
		$host = defined $host ? $host->name : $addr;
		my $host_ = $host;
		$host_ =~ s/[\.-]/_/g;
		next unless $host_ eq $name;
		print "graph_title NTP statistics for peer $host\n";
	}
	print "graph_args --base 1000 --vertical-label msec --lower-limit 0\n";
        print "delay.label Delay\n";
        print "delay.draw LINE2\n";
        print "offset.label Offset\n";
        print "offset.draw LINE2\n";
        print "jitter.label Jitter\n";
        print "jitter.draw LINE2\n";
        exit 0;
}

my @lines = `ntpq -c "hostnames no" -c peers`;
foreach (@lines) {
	next unless /^.(\d+\.\d+\.\d+\.\d+)/;
	next if /^.224\.0\.1\.1/;
	my $addr = $1;
	my $host = gethostbyaddr(inet_aton($addr));
	$host = defined $host ? $host->name : $addr;
	$host =~ s/[\.-]/_/g;
	next unless $host eq $name;
	my @F = split;
	print <<"EOT";
delay.value $F[7]
offset.value $F[8]
jitter.value $F[9]
EOT
}

exit 0;

# vim:syntax=perl
