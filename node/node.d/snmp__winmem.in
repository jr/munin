#!@@PERL@@
#
# Copyright (C) 2004-2006 Jimmy Olsen, Dagfinn Ilmari Mannsaaker
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#%# family=snmpauto
#%# capabilities=snmpconf

use strict;
use Net::SNMP;

my $DEBUG = 0;
my $MAXLABEL = 20;

my $host      = $ENV{host}      || undef;
my $port      = $ENV{port}      || 161;
my $community = $ENV{community} || "public";
my $iface     = $ENV{interface} || undef;

if (defined $ARGV[0] and $ARGV[0] eq "snmpconf")
{
	print "require .1.3.6.1.2.1.25.5.1.1.2. [0-9]\n"; # Number
	print "require .1.3.6.1.2.1.25.2.2.0 [0-9]\n";
	exit 0;
}

if ($0 =~ /^(?:|.*\/)snmp_([^_]+)_winmem$/)
{
	$host  = $1;
	if ($host =~ /^([^:]+):(\d+)$/)
	{
		$host = $1;
		$port = $2;
	}
}
elsif (!defined($host))
{
	print "# Debug: $0 -- $1\n" if $DEBUG;
	die "# Error: couldn't understand what I'm supposed to monitor.";
}

my ($session, $error) = Net::SNMP->session(
		-hostname  => $host,
		-community => $community,
		-port      => $port
	);

if (!defined ($session))
{
	die "Croaking: $error";
}

my $result = $session->get_table ('-baseoid' => '.1.3.6.1.2.1.25.5.1.1.2.');
my $used = 0;

foreach my $key (keys %{$result}) {
    $used += ($result->{$key} * 1024);
}

my $total = get_single($session,'.1.3.6.1.2.1.25.2.2.0') * 1024;

if (defined $ARGV[0] and $ARGV[0] eq "config") {
	print "host_name $host\n";
	print "graph_title Windows Memory usage
graph_args --base 1024 -l 0
graph_vlabel Bytes
graph_category System
graph_info This graph shows the memory usage of a windows system.
";
	my $draw='AREA';

	print "used.label Used memory\n";
	print "used.info Total memory used\n";
	print "used.draw AREA\n";
	print "total.label Available memory\n";
	print "total.info Total memory available\n";
	print "total.draw LINE1\n";
	exit 0;
}

# Print values

print "used.value ",$used,"\n";
print "total.value ",$total,"\n";

sub get_single
{
        my $handle = shift;
        my $oid    = shift;

        print "# Getting single $oid...\n" if $DEBUG;

        my $response = $handle->get_request ($oid);

        if (!defined $response->{$oid})
        {
            return undef;
        }
        else
        {
            return $response->{$oid};
        }
}
